{"version":3,"sources":["Components/FormComponent.js","Components/ListComponent.js","App.js","index.js"],"names":["FormComponent","props","useState","form","setForm","errors","setErrors","formRef","useRef","setField","field","value","useEffect","window","addEventListener","e","keyCode","ctrlKey","document","getElementById","click","Form","noValidate","ref","Group","className","Label","Control","required","type","name","onChange","target","isInvalid","placeholder","Feedback","as","rows","message","Button","onClick","preventDefault","newErrors","test","match","findFormErrors","Object","keys","length","postData","id","ListComponent","items","map","item","Card","CardHeader","Body","_id","App","isLoaded","setIsLoaded","setItems","status","setStatus","url","process","a","data","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","isJson","get","includes","json","ok","error","Promise","reject","unshift","oldArray","fetchData","Container","fluid","Row","Col","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.13c3f48c.chunk.js","sourcesContent":["import {Button, Form} from \"react-bootstrap\";\nimport React, {useState, useEffect, useRef} from \"react\";\n\nfunction FormComponent(props) {\n\n    const [form, setForm] = useState({});\n    const [errors, setErrors] = useState({});\n    const formRef = useRef(null);\n\n    const setField = (field, value) => {\n        setForm({\n            ...form,\n            [field]: value\n        })\n\n        if (!!errors[field]) setErrors({\n            ...errors,\n            [field]: null\n        })\n    }\n\n    const findFormErrors = () => {\n        const {name, message} = form\n        const newErrors = {}\n        let nameValidator = /^[a-zA-Z0-9_]+$/gi;\n        let messageValidator = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g;\n        if (!name || name === '') newErrors.name = 'The field cannot be blank'\n        else if (!nameValidator.test(name)) newErrors.name = 'The field cannot contain only latin letters, numbers and underscore symbol'\n        if (!message || message === '') newErrors.message = 'The field cannot be blank'\n        else if (message.match(messageValidator)) newErrors.message = 'The field cannot not contain hypelinks'\n        return newErrors\n    }\n\n    useEffect(() => {\n        function onKeyup(e) {\n            if (e.keyCode === 13 && e.ctrlKey) {\n                document.getElementById('submitButton').click();\n            }\n        }\n\n        window.addEventListener('keyup', onKeyup);\n    });\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        const newErrors = findFormErrors()\n        if (Object.keys(newErrors).length > 0) {\n            setErrors(newErrors)\n        } else {\n            props.postData({'name': form.name, 'message': form.message});\n        }\n    }\n\n    return (\n        <>\n            <Form noValidate ref={formRef}>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control required\n                                  type=\"text\" name=\"name\"\n                                  onChange={e => setField('name', e.target.value)}\n                                  isInvalid={!!errors.name}\n                                  placeholder=\"Enter your name\"/>\n                    <Form.Control.Feedback type='invalid'>\n                        {errors.name}\n                    </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Message</Form.Label>\n                    <Form.Control required as=\"textarea\" rows={3} name=\"message\"\n                                  onChange={e => setField('message', e.target.value)}\n                                  isInvalid={!!errors.message}\n                                  placeholder=\"Please leave your message here\"/>\n                    <Form.Control.Feedback type='invalid'>\n                        {errors.message}\n                    </Form.Control.Feedback>\n                </Form.Group>\n                <Button onClick={handleSubmit} className=\"mb-2\" id=\"submitButton\">\n                    Send\n                </Button>\n            </Form>\n        </>\n    );\n}\n\nexport default FormComponent;","import React from \"react\";\nimport {Card} from \"react-bootstrap\";\nimport CardHeader from \"react-bootstrap/CardHeader\";\n\nfunction ListComponent(props) {\n    return (\n        <>\n            {props.items.map(item => (\n                <Card key={item._id} className=\"mb-2\">\n                    <CardHeader className=\"card-header\">\n                        {item.name}\n                    </CardHeader>\n                    <Card.Body>\n                        {item.message}\n                    </Card.Body>\n                </Card>\n            ))}\n        </>\n    );\n}\n\nexport default ListComponent;","import React, {useEffect, useState} from \"react\";\nimport \"./App.css\";\nimport {Row, Col, Container} from \"react-bootstrap\";\nimport FormComponent from \"./Components/FormComponent\";\nimport ListComponent from \"./Components/ListComponent\";\nimport axios from \"axios\";\n\nfunction App() {\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([],);\n    const [status, setStatus] = useState(null);\n    const url = process.env.REACT_APP_BACKEND_URL;\n\n    const postData = async (data = {}) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(data)\n        };\n\n        fetch(url, requestOptions)\n            .then(async response => {\n                const isJson = response.headers.get('content-type')?.includes('application/json');\n                const data = isJson && await response.json();\n                if (!response.ok) {\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                if (response.status === 201){\n                    setStatus(response.status);\n                }\n                items.unshift(data);\n                setItems(oldArray => [...oldArray, items]);\n            })\n    }\n\n    useEffect(() => {\n        const fetchData = async (data = {}) => {\n            fetch(url)\n                .then(async response => {\n                    const isJson = response.headers.get('content-type')?.includes('application/json');\n                    const data = isJson && await response.json();\n                    if (!response.ok) {\n                        const error = (data && data.message) || response.status;\n                        return Promise.reject(error);\n                    }\n                    setItems(data);\n                    setIsLoaded(true);\n                })\n        }\n\n        fetchData();\n    }, [url]);\n\n    return (\n        <Container fluid>\n            <Row className=\"justify-content-md-center mt-5 mb-5\">\n                <h1>{process.env.REACT_APP_WEBSITE_NAME}</h1>\n            </Row>\n\n            <Row className=\"justify-content-md-center\">\n                <Col>\n                    <FormComponent postData={postData} status={status}/>\n                </Col>\n            </Row>\n\n            <Row className=\"justify-content-md-center mt-5\">\n                <Col>\n                    {!isLoaded &&\n                    <div>Loading messages...</div>}\n                    <ListComponent items={items}/>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}